<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Tip">
<!--  parameterType 안 써도  #{ }쓰면 자동으로 DTO로 인식함! 왜냐면 DAO에서 DTO를 매개변수로 넘겨서 mapper 실행했기 때문! -->
	<insert id="insert">
		insert into livingPoint values(livingpoint_seq.nextval,#{category},#{writer},#{title},#{contents}, sysdate, 0,0,0)
	</insert>

<!-- select는 resultType을 꼭 명시해주기! parameterType은 안 써도 되지만...ㅎ -->
	<select id="selectAll" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select livingPoint.*, (select count(*) from livingComment where rootseq = livingPoint.seq) countSeq from livingPoint
	</select>

	<select id="selectOne" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
<!-- 		이렇게 #{value}라고 적으면 매개변수가 1개일 때만, 매개변수를 받아줌! 여러개 일땐, 그냥 dto 넘겨 받기! -->
		select * from livingPoint where seq = #{value}
	</select>

	<select id="getMaxSeq" resultType="Integer">
		select max(seq) from livingPoint where writer = #{writer}
	</select>
	
	<!-- update는 resultType 명시 안해도 됨? 결과 값으로 '1'행이 업뎃되었다고 나올텐데... -->
	<update id="updateTip">
		update livingPoint set category=#{category}, title=#{title}, contents=#{contents} where seq=#{seq}
	</update>
	
	<delete id="deleteTip">
		delete from livingPoint where seq = #{value}
	</delete>
	
<!-- 좋아요 관련 -->
<!-- 	동일 게시글 추천 여부 검색! 좋아요는 1개 게시물에 1번만 -->
	<select id="likeCheck" resultType="Integer">
		select count(*) from livingLike where seq = #{seq} and id = #{id}
	</select>

<!-- 게시글 좋아요 누름 -->
	<insert id="likeInsert" >
		insert into livingLike values (#{seq},#{id})
	</insert>
	
<!-- 게시글 좋아요 취소	 -->
	<delete id="likeDelete">
		delete from livingLike where seq = #{seq} and id = #{id}
	</delete>
<!-- 게시글 추천 수 구하기 -->
	<select id="likeCount" resultType="Integer">
		select likeCount from livingPoint where seq = #{seq}
	</select>
	
	<update id="likePlus">
		update livingPoint set likeCount = likeCount + 1 where seq = #{seq}
	</update>
	
	<update id="likeMinus">
		update livingPoint set likeCount = likeCount - 1 where seq = #{seq}
	</update>
	
	<update id="viewCount">
		update livingPoint set viewCount = viewCount + 1 where seq = #{seq}
	</update>
	
<!-- 스크랩 관련	 -->
	<insert id="scrap">
		insert into livingScrap values(scrap_seq.nextval,#{rootSeq},#{category},#{title},#{id},sysdate)
	</insert>
<!-- 	게시글 번호로 스크랩 지우기 -->
	<delete id="deleteScrap">
		delete from livingScrap where rootSeq = #{value}
	</delete>
	
<!-- 	게시글 스크랩 수 구하기 -->
	<select id="scrapCount" resultType="Integer">
		select count(*) from livingScrap where rootSeq = #{seq}
	</select>
	
	<select id="scrapCheck" resultType="Integer">
		select count(*) from livingScrap where rootSeq = #{seq} and id = #{id}
	</select>
	
	<update id="scrapPlus">
		update livingPoint set scrapCount = scrapCount + 1 where seq = #{seq}
	</update>
	
<!-- 	나의 스크랩 리스트 가져오기 -->
	<select id="myScrap" resultType="recoder.single.bangle.tipBoard.DTO.ScrapDTO">
		select * from (select livingscrap.*, row_number() over(order by scrapdate) rk from livingscrap where id = #{id}) where rk between #{start} and #{end} 
	</select>
	
<!-- 	나의 스크랩 리스트 개수 가져오기 -->
	<select id="myScrapCount" resultType="Integer">
		select count(*) from livingScrap where id = #{id}
	</select>
	
	<select id="tipCount" resultType="Integer">
		select count(*) from livingPoint
	</select>
	
	<select id="selectByPage" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select livingPoint.*,(select count(*) from livingComment where rootseq = livingPoint.seq) countSeq from (select livingPoint.*, row_number() over(order by seq desc) as rown from livingPoint) livingPoint where rown between #{startNum} and #{endNum}
	</select>

<!-- 페이지를 10개씩 	 -->

	<select id="selectByPageTitle" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select * from (select livingPoint.*, row_number() over(order by seq desc) as rown from livingPoint where title like '%'||#{input}||'%') where rown between #{startNum} and #{endNum}
	</select>

	
	<select id="selectByPageContents" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select * from (select livingPoint.*, row_number() over(order by seq desc) as rown from livingPoint where contents like '%'||#{input}||'%') where rown between #{startNum} and #{endNum}
	</select>
	
	<select id="selectByPageBoth" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select * from (select livingPoint.*, row_number() over(order by seq desc) as rown from livingPoint where title like '%'||#{input}||'%' or contents like '%'||#{input}||'%') where rown between #{startNum} and #{endNum}
	</select>
	
<!-- 상세검색  -->
	<select id="searchTitleCount" resultType="Integer">
		select count(*) from livingPoint where title like '%'||#{value}||'%'
	</select>

	<select id="searchContents" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select * from livingPoint where contents like '%'||#{value}||'%'
	</select>
	
	<select id="searchBoth" resultType="recoder.single.bangle.tipBoard.DTO.BoardDTO">
		select * from livingPoint where title like '%'||#{value}||'%' or contents like '%'||#{value}||'%'
	</select>
	
<!-- 신고하기 -->
	<insert id="report">
		insert into hasReported values(hasReported_seq.nextval, #{id}, sysdate, #{reason}, #{reportedUrl}, default, sysdate)
	</insert>

<!-- 댓글 -->
	<insert id="addComment">
		insert into livingComment values (comment_seq.nextval, #{rootSeq}, #{writer}, #{contents}, sysdate)
	</insert>
	
	<select id="cmtList" resultType="recoder.single.bangle.tipBoard.DTO.CommentDTO">
		select * from livingComment where rootSeq = #{rootSeq}
	</select>
<!-- 그냥 바로 댓글 지우기 mapper -->
	<delete id="cmtDelete">
		delete from livingComment where seq = #{value}
	</delete>
<!-- 글을 지우면 댓글도 지우는 mapper -->
	<delete id="commentDelete">
		delete from livingComment where rootSeq = #{value}
	</delete>

	<select id="getRootSeq" resultType="Integer">
		select rootSeq from livingComment where seq = #{value}
	</select>
	
	<update id="cmtUpdate">
		update livingComment set contents = #{contents} where seq = #{seq}
	</update>

</mapper>


